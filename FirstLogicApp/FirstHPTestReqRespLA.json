{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azureblob_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azureblob-4"
    },
    "azureblob_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "mytestsaconnection"
    },
    "azureblob_1_accountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      }
    },
    "azureblob_1_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    },
    "azureblob_1_authType": {
      "type": "string",
      "metadata": {
        "description": "Authentication type to connect to your database"
      },
      "allowedValues": [
        "basic",
        "anonymous"
      ]
    },
    "azureblob_1_privacySetting": {
      "type": "string",
      "metadata": {
        "description": "Privacy Setting"
      },
      "allowedValues": [
        "None",
        "Private",
        "Organizational",
        "Public"
      ]
    },
    "azurefile_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azurefile-3"
    },
    "azurefile_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "newsa"
    },
    "azurefile_1_accountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      },
      "defaultValue": "deststrgaccnthp"
    },
    "azurefile_1_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "uaenorth",
        "southafricanorth",
        "southafricawest",
        "switzerlandnorth",
        "switzerlandwest",
        "germanynorth",
        "germanywestcentral",
        "norwayeast",
        "brazilsoutheast"
      ],
      "defaultValue": "northeurope"
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "FirstHPTestHttpReqRespLA"
    },
    "azureblob_2_Connection_Name": {
      "type": "string",
      "defaultValue": "azureblob"
    },
    "azureblob_2_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "sacontainer"
    },
    "azureblob_2_accountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      }
    },
    "azureblob_2_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    },
    "azureblob_2_authType": {
      "type": "string",
      "metadata": {
        "description": "Authentication type to connect to your database"
      },
      "allowedValues": [
        "basic",
        "anonymous"
      ]
    },
    "azureblob_2_privacySetting": {
      "type": "string",
      "metadata": {
        "description": "Privacy Setting"
      },
      "allowedValues": [
        "None",
        "Private",
        "Organizational",
        "Public"
      ]
    },
    "azurefile_2_Connection_Name": {
      "type": "string",
      "defaultValue": "azurefile"
    },
    "azurefile_2_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "fileshareconnection"
    },
    "azurefile_2_accountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      },
      "defaultValue": "hptestsa"
    },
    "azurefile_2_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "type": "Foreach",
              "foreach": "@body('Lists_blobs_(V2)')?['value']",
              "actions": {
                "Create_file": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azurefile']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": "@body('Get_blob_content_(V2)')",
                    "headers": {
                      "ReadFileMetadataFromServer": true
                    },
                    "path": "/datasets/default/files",
                    "queries": {
                      "folderPath": "/imagesnew",
                      "name": "@items('For_each')?['Name']",
                      "queryParametersSingleEncoded": true
                    }
                  },
                  "runAfter": {
                    "Get_blob_content_(V2)": [
                      "Succeeded"
                    ]
                  },
                  "runtimeConfiguration": {
                    "contentTransfer": {
                      "transferMode": "Chunked"
                    }
                  }
                },
                "Get_blob_content_(V2)": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(items('For_each')?['Id']))}/content",
                    "queries": {
                      "inferContentType": true
                    }
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Lists_blobs_(V2)": [
                  "Succeeded"
                ]
              }
            },
            "Lists_blobs_(V2)": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/foldersV2/@{encodeURIComponent(encodeURIComponent('JTJmaW1hZ2Vz'))}",
                "queries": {
                  "nextPageMarker": "",
                  "useFlatListing": false
                }
              },
              "runAfter": {},
              "metadata": {
                "JTJmaW1hZ2Vz": "/images"
              }
            },
            "Response": {
              "type": "Response",
              "kind": "Http",
              "inputs": {
                "statusCode": 200,
                "body": "Recieved request to move the file:  of type "
              },
              "runAfter": {
                "For_each": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {}
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azurefile": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azurefile')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azurefile_2_Connection_Name'))]",
                "connectionName": "[parameters('azurefile_2_Connection_Name')]"
              },
              "azureblob_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob_2_Connection_Name'))]",
                "connectionName": "[parameters('azureblob_2_Connection_Name')]"
              },
              "azureblob": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
                "connectionName": "[parameters('azureblob_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azurefile_2_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azureblob_2_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureblob_1_Connection_Name')]",
      "location": "northeurope",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'northeurope', '/managedApis/', 'azureblob')]"
        },
        "displayName": "[parameters('azureblob_1_Connection_DisplayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob_1_accountName')]",
          "accessKey": "[parameters('azureblob_1_accessKey')]",
          "authType": "[parameters('azureblob_1_authType')]",
          "privacySetting": "[parameters('azureblob_1_privacySetting')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azurefile_1_Connection_Name')]",
      "location": "northeurope",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'northeurope', '/managedApis/', 'azurefile')]"
        },
        "displayName": "[parameters('azurefile_1_Connection_DisplayName')]",
        "parameterValues": {
          "accountName": "[parameters('azurefile_1_accountName')]",
          "accessKey": "[parameters('azurefile_1_accessKey')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureblob_2_Connection_Name')]",
      "location": "[parameters('LogicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azureblob')]"
        },
        "displayName": "[parameters('azureblob_2_Connection_DisplayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob_2_accountName')]",
          "accessKey": "[parameters('azureblob_2_accessKey')]",
          "authType": "[parameters('azureblob_2_authType')]",
          "privacySetting": "[parameters('azureblob_2_privacySetting')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azurefile_2_Connection_Name')]",
      "location": "[parameters('LogicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'azurefile')]"
        },
        "displayName": "[parameters('azurefile_2_Connection_DisplayName')]",
        "parameterValues": {
          "accountName": "[parameters('azurefile_2_accountName')]",
          "accessKey": "[parameters('azurefile_2_accessKey')]"
        }
      }
    }
  ],
  "outputs": {}
}